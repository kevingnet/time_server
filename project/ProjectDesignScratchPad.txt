Option 4: Backend Fun
Create a REST API to serve out the current time securely. 
Include an unprotected API to login and receive a token, and a protected API 
to receive the current time. Use a docker environment to build and run the code.


Time Server Application

CURRENT STATE and ISSUES:
- Server is nodejs, with a RESTful API, has logon capabilities, this isn't really a proper logon since
    it doesn't use OAuth2, but simple database query to find user, check password,
    currently is very buggy and in a state of flux

DIRECTORIES
datagen: generate data to import into the mysql database, python scripts
mysql: schema graphics, ddl to recreate the time server database

==============================================
COMPONENTS:
cloud computer (ec2): SERVER
    - hosts Node.js app
    - serves REST APIs
cloud database (mysql): SERVER access
    - table users 

==============================================
COMPONENT COMMUNICATIONS
    - CLIENT calls Logon API with UserName
    - SERVER access database, identifies UserName and returns token
    - User gets current time
    
==============================================
APIs (Operations)

USERS: (GUESTS)
Logon
Get current time



=====================================================
